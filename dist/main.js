(()=>{const e=()=>{document.querySelectorAll(".side-list").forEach(((e,a)=>{e.onclick||(e.onclick=e=>{e.composedPath()[0].classList.add("selected"),prevTab.classList.remove("selected"),prevTab=e.composedPath()[0],n=a,c.displayTasks(),document.getElementById("title").innerHTML=t[n]})}))};var t=["Inbox","Today","This week"];prevTab=document.getElementById("inb");var n=0;e();var a=[],d={};if(d[t[n]]=[],d.Today=[],localStorage)for(x in localStorage)if("string"==typeof localStorage[x]){var r=JSON.parse(localStorage[x]);d[x]=r,"Inbox"!=x&&(a.push(x),t.push(x))}console.log(a);const o=(()=>{const e=()=>{localStorage.setItem(t[n],JSON.stringify(d[t[n]]))};return{addTask:()=>{var a=((e,t)=>({name:e,date:t}))(document.getElementById("task-name").value,document.getElementById("task-date").value);d[t[n]].push(a),e(),c.displayTasks()},dltTaskListner:()=>{document.querySelectorAll(".radio").forEach(((a,r)=>{a.onclick||(a.onclick=()=>{d[t[n]].splice(r,1),e(),c.displayTasks()})}))},Listeners:()=>{document.getElementById("task-btn").onclick=c.taskForm,document.getElementById("pro-btn").onclick=c.proForm},addProject:()=>{var e=document.getElementById("pr-name").value;d[e]=[],t.push(e),a.push(e),c.displayPr()}}})(),c={taskForm:()=>{var e=document.getElementById("task"),t=document.createElement("div"),n=document.createElement("input");n.setAttribute("id","task-name"),n.required=!0;var a=document.createElement("input");a.setAttribute("id","task-date"),a.setAttribute("type","date"),a.required=!0;var d=document.createElement("button");d.onclick=o.addTask,d.innerHTML="Add",t.append(n,a,d),e.appendChild(t)},displayTasks:()=>{var e=d[t[n]];if(e){var a=document.getElementById("task");a.innerHTML="",e.forEach((e=>{var t=document.createElement("button"),n=document.createElement("p"),d=document.createElement("span"),r=document.createElement("li");n.innerHTML=e.name,d.innerHTML=e.date,t.classList.add("radio"),r.append(t,n,d),a.appendChild(r)})),o.dltTaskListner()}},proForm:()=>{var e=document.getElementById("projects"),t=document.createElement("input"),n=document.createElement("button");t.setAttribute("id","pr-name"),n.innerHTML="Add",n.onclick=o.addProject;var a=document.createElement("div");a.append(t,n),e.appendChild(a)},displayPr:()=>{var t=document.getElementById("projects");t.innerHTML="",a.forEach((e=>{var n=document.createElement("li");n.innerHTML=e,n.classList.add("side-list");var a=document.createElement("button");a.innerHTML="X",n.appendChild(a),t.appendChild(n)})),e()}};o.Listeners(),c.displayPr(),c.displayTasks()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,